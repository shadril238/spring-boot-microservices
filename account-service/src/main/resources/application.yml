server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    #    url: jdbc:mysql://localhost:3306/accountsdb
    #    username: root
    #    password: root
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
  service-url:
    defaultZone: http://localhost:8761/eureka/

info:
  app:
    name: "accounts"
    description: "Accounts Service for EazyBank"
    version: "1.0.0"

logging:
  level:
    com:
      shadril238:
        accounts: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration: 100
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2.0
      ignore-exceptions:
        - java.lang.NullPointerException
      retry-exceptions:
        - java.util.concurrent.TimeoutException